@model FOS.Shared.RequestData

@{
    ViewBag.Title = "Appointment Request";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN THEME CUSTOMIZER-->
        <!-- END THEME CUSTOMIZER-->
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class="page-title"></h3>
        <ul class="breadcrumb" style="background-color: #08c">
            <li>
                <a href="#">Admin</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="#">Manage Department</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
@*@using (Ajax.BeginForm("AddUpdateDoctorSlot", "Admin", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true)*@
<div class="form-horizontal">
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green" style="">
                <div class="widget-title">
                    <h4>Manage Request</h4>
                    <span class="tools">
                        @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                        @*<a href="javascript:;" class="icon-remove"></a>*@
                    </span>
                </div>
                <div class="widget-body" style="height:300px">

                    <!-- BEGIN FORM-->
                    <!-- Select Region -->
                    <div class="control-group">
                        <label class="control-label">Select Department</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.DeptID, new SelectList(Model.Dept, "ID", "Name"))
                            @Html.ValidationMessageFor(model => model.DeptID)
                        </div>
                    </div>

                    <div class="control-group">
                            <label class="control-label">Sub Department *</label>
                            <div class="controls">
                                @Html.DropDownListFor(model => model.SubDeptID, new SelectList(Model.SubDept, "ID", "Name"))
                                @Html.ValidationMessageFor(model => model.SubDeptID)
                            </div>
                        </div>
                    <div class="control-group">
                        <label class="control-label">Select Doctor</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.DoctorID, new SelectList(Model.Doctor, "EmpID", "EFName"))
                            @Html.ValidationMessageFor(model => model.DoctorID)
                            @Html.HiddenFor(model => model.DoctorID)
                        </div>
                    </div>

                    <div class="control-group">
                        <label class="control-label">Starting Date:</label>
                        <div class="controls">
                            <input type="date" class="text-box single-line" id="StartingDate" name="StartingDate" style="height: 22px; width: 202px; margin-bottom: 0px;">

                        </div>
                    </div>
                    @*<div class="control-group">
                        <label class="control-label">Ending Date:</label>
                        <div class="controls">
                            <input type="date" class="text-box single-line" id="EndingDate" name="EndingDate" style="height: 22px; width: 202px; margin-bottom: 0px;">

                        </div>
                    </div>*@

                    <!-- Buttons -->
                    <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                        <div class="form-actions" style="padding-left:238px">
                            <button type="submit" id="btnNew2" class="btn btn-primary">
                                <i class="icon-ok icon-white" style="padding-right:8px"></i><span id="create">Search</span>
                            </button>
                            
                        </div>
                    </div>

                    <!-- END FORM-->
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
    </div>
</div>
@* } *@
<!-- BEGIN EDITABLE TABLE widget-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">
            <div class="widget-title">
                <h4>View Detail</h4>
                <span class="tools">
                    @*<a href="javascript:;" class="icon-chevron-down"></a>*@
                    @*<a href="javascript:;" class="icon-remove"></a>*@
                </span>
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        @*<div class="btn-group">
                                <button id="editable-sample_new" class="btn green">
                                    Add New <i class="icon-plus"></i>
                                </button>
                            </div>*@
                        <div class="btn-group pull-right"></div>
                    </div>
                    <div class="space15"></div>
                    <table class="table table-striped table-hover table-bordered" id="datatab" style="width: 100%;">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ID)
                                </th>
                                <th style="width: 14% !important">Sr #</th>

                                <th style="width: 15% !important">DoctorName</th>
                                <th style="width: 10% !important">MobileNo</th>
                                @*<th style="width: 10% !important">Email</th>
                                <th style="width: 20% !important">Department</th>*@
                                <th style="width: 8% !important">Slot</th>
                                <th style="width: 8% !important">Status</th>
                                @* <th style="width: 10% !important">Action</th>*@
                                @*<th style="width: 10% !important">Report</th>*@
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->

    </div>
</div>
<!-- END EDITABLE TABLE widget-->

<script>
    function LoadSubDepartment() {
        try {
            debugger;
            var deptID = $("#DeptID").val();

            $.ajax({
                type: "POST",
                data: { DeptID: deptID },
                url: "@Url.Action("GetSubDepartmentListByDeptWise", "Admin")",
                dataType: 'json',
            success: function (json) {
                debugger;
                var $el = $("#SubDeptID");
                $el.empty(); // remove old options
                $.each(json, function (value, key) {

                    $el.append($("<option></option>")
                            .val(key.ID).text(key.Name));
                });

                //if ($('#CityID').val() != null) {
                //    $('#datatab').dataTable().fnDestroy();
                //    GenerateDetailGrid();
                //}
                ////else {
                ////    $('#datatab').dataTable().empty();
                ////}

            }

        });
    } catch (e) {
        alert(e);
        $('#datatab').dataTable().fnDestroy();
    }

    }
 
        $("#DeptID").change(function () {
        //debugger;
        LoadSubDepartment();
        LoadDoctor()
        });
    $("#SubDeptID").change(function () {
        //debugger;
        LoadDoctor()
    });
    function LoadDoctor()
    {
        //debugger;
        var deptID = $("#DeptID").val();
        var SubDeptID = $("#SubDeptID").val();
        $.ajax({
            type: "Post",
            data: {DeptID:deptID},
            url: "@Url.Action("GetDoctorDepartmentWise","Admin")",
            dataType: 'json',
            success: function(json)
            {
            //    debugger;
                var $el = $("#DoctorID");
                $el.empty();
                $.each(json,function(value,key)
                {

                    $el.append($("<option></option>").val(key.EmpID).text(key.EFName));
                });
            }
        });
    }

        function GenerateDetailGrid() {

            //$('#datatab tfoot th').each(function () {
            //    $(this).html('<input type="text" />');
            //});
            var DoctorID = $("#DoctorID").val();
            var oTable = $('#datatab').DataTable({
                "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
                "iDisplayLength": 10,
                "paging": true,
                "pagingType": "full_numbers",
                "serverSide": true,
                "bRetrieve": true,
                "bDestroy": true,
                "autoWidth": true,

                "ajax": {
                    "type": "POST",
                    "url": '@Url.Action("AvailableDoctorRequestHandler", "Admin")',
                    "contentType": 'application/json; charset=utf-8',
                    'data': function(data) {

                        data.ID = $('#ID').val();
                       // sessionStorage.setItem("DoctorID", $("#DoctorID").val());
                        data.DoctorID = $('#DoctorID').val();
                        data.StartingDate = $('#StartingDate').val();
                     
                        return data = JSON.stringify(data);
                    },

                },
                "fnDrawCallback": function (osetting) {

                    var UpdateCheck = "0";
                    var DeleteCheck = "0";

                    if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }
                    else {
                        $(".edit").on("click", function () {

                            ClearForm();
                            var EmpID = $(this).attr("data-id");
                            var PatientName = $(this).attr("data-PatientName");
                            var MobileNo = $(this).attr("data-MobileNo");
                            var Email = $(this).attr("data-Email");

                            $("#ID").val($(this).attr("data-ID"));
                            $("#PatientName").val($(this).attr("data-PatientName"));
                            $("#MobileNo").val($(this).attr("data-MobileNo"));
                            $("#Email").val($(this).attr("data-Email"));
                            //$("#Department").val($(this).attr("data-Department"));
                            $("#DoctorName").val($(this).attr("data-DoctorName"));
                            //$("#Prefix").val($(this).attr("data-Prefix"));
                            //$('#myModalContent').html(data);
                            //$('#myModal').modal(options);
                            $("#loginModal").modal('show');
                            //myFunction();


                        });
                    }

                    if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".report").css("display", "none"); }
                    else {
                        $(".report").on("click", function () {

                            var PatientID = $(this).attr("data-id");

                            // confirm dialog
                            //alertify.confirm("Are You Sure You Want To Delete This Record ?  ", function (e) {
                                //if (e) {

                                    $.ajax({
                                        type: "POST",
                                        url: "@Url.Action("PatientReport", "Admin")",
                                        data: { PatientID: PatientID },
                                        success: function (data) {
                                        }

                                    });

                                //} else { }
                            //});

                        });
                    }
                },

                "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                    $("td:first", nRow).html(iDisplayIndex + 1);
                    return nRow;
                },
                "oLanguage": { "sSearch": "Search Patient : " },
                "sDom": 'lftipr',
                "processing": true,
                "deferRender": true,
                "bSelect": true,
                "columns": [
               { "data": "ID", "bVisible": false },
               { "data": "DoctorName", "bSortable": false },
               { "data": "DoctorName" },
               { "data": "MobileNo" },
               { "data": "SlotName" },
               { "data": "Status" },
                    //{
                    //    "sClass": "center-align-td",
                    //    "mData": null,
                    //    "bSortable": false,
                    //    "mRender": function (data, type, row) {
                    //        return '<button class="btn btn-success edit" data-id=' + row.ID + ' data-PatientName=' + row.PatientName + ' data-MobileNo=' + row.MobileNo + ' data-Email=' + row.Email + ' data-Department=' + row.Department + ' data-DoctorName=' + row.DoctorName + ' data-RequestedDate=' + row.RequestedDate + ' data-Slot=' + row.SelectedSlot + '>' + '<i class=icon-pencil></i>' + '</button>' + '<button class="btn btn-danger report" data-id=' + row.ID + '>' + '<i class=icon-print></i>' + '</button>';
                    //        //return '<button class="btn btn-success edit" data-ID=' + row.ID + 'data-PatientName=' + row.PatientName + 'data-MobileNo=' + row.MobileNo + 'data-Email=' + row.Email + 'data-Department=' + row.Department + 'data-DoctorName=' + row.DoctorName + 'data-RequestedDate=' + row.RequestedDate + 'data-Slot=' + row.Slot + 'data-status=' + row.Status + '>' + '<i class=icon-pencil></i>' + '</button>';
                    //    }
                    //}
                ],
                "order": [3, "asc"]

            });

        }
    $("#btnNew2").click(function () {
        //debugger;
        GenerateDetailGrid();
        //var dt = $("#datatab").DataTable();
        //dt.ajax.reload();

    });
        $(document).ready(function () {
            $('#c').datepicker(
                {
                    dateFormat: 'dd-M-yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '1950:2100'
                });
            $('#EndingDate').datepicker(
                {
                    dateFormat: 'dd-M-yy',
                    changeMonth: true,
                    changeYear: true,
                    yearRange: '1950:2100'
                });
            $("#liSetup,#liRegion").addClass("active");
            $('#myModal').modal('hide');
            var WriteCheck = "0";

            if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
                // $("#btnNew").css("display", "none");
                $("#btnNew").attr("disabled", true);
            }
            else {
            }

            $("#btnRefresh").click(function () {
                ClearForm();
            });

            GenerateDetailGrid();

        });
</script>
<script type="text/javascript">

    function ClearForm() {
        $('#Name').val('');
        $('#ShortCode').val('');
        $('#ID').val(0);
        $('#create').text('Create');
    }

    function OnSuccess(response) {
        if (response == "1") {
            alertify.success("Department Saved Successfully");
            $('#create').text('Create');
            var dt = $('#datatab').DataTable();
            dt.ajax.reload();
            ClearForm();
        }
        else if (response == "0") {
            alertify.error("Unable To Save Department.");
        }
        else if (response == "2") {
            alertify.error("Department Code Already Exist");
        }
        else {
            alertify.error(response);
        }

    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }
</script>
