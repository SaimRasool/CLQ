@model FOS.Shared.ObservationData

@{
    ViewBag.Title = "Add Observation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- BEGIN PAGE HEADER-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN THEME CUSTOMIZER-->
        <!-- END THEME CUSTOMIZER-->
        <!-- BEGIN PAGE TITLE & BREADCRUMB-->
        <h3 class="page-title"></h3>
        <ul class="breadcrumb" style="background-color: #08c">
            <li>
                <a href="../Admin/Dashboard">Admin</a>
                <span class="divider">/</span>
            </li>
            <li>
                <a href="../Audit/Dashboard">Manage Observation/Recomendation</a>
            </li>
        </ul>
        <!-- END PAGE TITLE & BREADCRUMB-->
    </div>
</div>
@using (Ajax.BeginForm("AddUpdateObervation", "Audit", new AjaxOptions { OnSuccess = "OnSuccess", OnFailure = "OnFailure" }, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)

    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN SAMPLE FORMPORTLET-->
            <div class="widget green" style="">
                <div class="widget-title">
                    <h4>Manage Observation/Recomendation</h4>
                    <span class="tools">
                        @Html.TextBoxFor(model => model.AuditYear, new { @class = "form-control", @readonly = true, @disabled = "disabled" })
                    </span>
                </div>
                <div class="widget-body">
                    <!-- BEGIN FORM-->
                    <div class="control-group">
                        <label class="control-label">Select Region *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.RegionID, new SelectList(Model.RegionsList, "ID", "Name"))
                            @Html.ValidationMessageFor(model => model.RegionID)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Select Category *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.DeptID, new SelectList(Model.Dept, "ID", "Name"))
                            @Html.ValidationMessageFor(model => model.DeptID)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Select Center *</label>
                        <div class="controls">
                            @Html.DropDownListFor(model => model.SubDeptID, new SelectList(Model.SubDept, "ID", "SubDepartment"))
                            @Html.ValidationMessageFor(model => model.SubDeptID)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Obervation *</label>
                        <div class="controls">
                            @Html.TextAreaFor(model => model.Observation)
                            @Html.ValidationMessageFor(model => model.Observation)
                            @Html.HiddenFor(model => model.ID)
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label">Recomendation *</label>
                        <div class="controls">
                            @Html.TextAreaFor(model => model.Recomendation)
                            @Html.ValidationMessageFor(model => model.Recomendation)
                        </div>
                    </div>
                    <div class="control-group" style="border-top: 1px solid #e5e5e5;">
                        <div class="form-actions" style="padding-left: 240px;">
                            <button type="submit" id="btnNew" class="btn btn-primary">
                                <i class="icon-ok icon-white" style="padding-right: 8px;"></i><span id="create">Create</span>
                            </button>
                            <button type="button" class="btn btn-small btn-info" id="btnRefresh"><i class="icon-ban-circle icon-white" style="padding-right: 8px;"></i>Reset</button>
                        </div>
                    </div>

                    <!-- END FORM-->
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
    </div>

}
<!-- BEGIN EDITABLE TABLE widget-->
<div class="row-fluid">
    <div class="span12">
        <!-- BEGIN EXAMPLE TABLE widget-->
        <div class="widget green">
            <div class="widget-title">
                <h4>View Detail</h4>
                <span class="tools">
                </span>
            </div>
            <div class="widget-body">
                <div>
                    <div class="clearfix">
                        <div class="btn-group pull-right"></div>
                    </div>
                    <div class="space15"></div>
                    <table class="table table-striped table-hover table-bordered" id="datatab" style="width: 100%;">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.ID)
                                </th>
                                <th style="width: 15% !important">Sr #</th>
                                <th style="width: 15% !important">
                                    Department
                                </th>
                                <th style="width: 8% !important">
                                    Observation
                                </th>
                                <th style="width: 8% !important">
                                    Recommendation
                                </th>
                                <th style="width: 10% !important">Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END EXAMPLE TABLE widget-->
    </div>
</div>
<script>

    function LoadSubDepartment() {
        try {
            // debugger;
            var RegionID = $("#RegionID").val();
            var deptID = $("#DeptID").val();

            $.ajax({
                type: "POST",
                data: { DeptID: deptID, RegionID: RegionID },
                url: "@Url.Action("GetSubDepartmentListByDeptAndRegionWise", "Admin")",
                dataType: 'json',
                success: function (json) {
                    //  debugger;
                    var $el = $("#SubDeptID");
                    $el.empty(); // remove old options
                    $.each(json, function (value, key) {

                        $el.append($("<option></option>")
                                .val(key.ID).text(key.Name));
                    });

                }

            });
        } catch (e) {
            //alert(e);
            $('#datatab').dataTable().fnDestroy();
        }

    }
    $("#RegionID").change(function () {
        LoadSubDepartment();
    });
    $("#DeptID").change(function () {
        LoadSubDepartment();
    });
       function GenerateDetailGrid() {
        var oTable = $('#datatab').DataTable({
            "aLengthMenu": [[10, 25, 50, 75, 100], [10, 25, 50, 75, 100]],
            "iDisplayLength": 10,
            "paging": true,
            "pagingType": "full_numbers",
            "serverSide": true,
            "bRetrieve": true,
            "bDestroy": true,
            "autoWidth": true,
            "ajax": {
                "type": "POST",
                "url": '@Url.Action("ObservationDataHandler", "Audit")',
                "contentType": 'application/json; charset=utf-8',
                'data': function (data) {
                    data.ID = $('#ID').val();
                    return data = JSON.stringify(data);
                },

            },
            "fnDrawCallback": function (osetting) {
                var UpdateCheck = "0";
                var DeleteCheck = "0";
                if (UpdateCheck == "@HttpContext.Current.Session["UpdateCheck"]") { $(".edit").css("display", "none"); }
                else {
                    $(".edit").on("click", function () {
                        ClearForm();

                        $('#ID').val($(this).attr("data-id"));
                        $('#create').text('Update');

                        $("#Observation").val($(this).attr("data-Observation"));
                        $("#Recomendation").val($(this).attr("data-Recomendation"));


                        $('html, body').animate({
                            scrollTop: $("#main-content").offset().top
                        }, 500);
                        $("#Observation").focus();

                    });
                }

                if (UpdateCheck == "@HttpContext.Current.Session["DeleteCheck"]") { $(".delete").css("display", "none"); }
                else {
                    $(".delete").on("click", function () {
                        debugger;
                        var ObservationID = $(this).attr("data-id");

                        // confirm dialog
                        alertify.confirm("Are You Sure You Want To Delete This Record ?  ", function (e) {
                            if (e) {

                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("DeleteDepartment", "Audit")",
                                    data: { ObservationID: ObservationID },
                                    success: function (data) {

                                        if (data == "0") {
                                            alertify.success('Record Deleted Successfully');
                                            var table = $('#datatab').DataTable();
                                            table.row(this).remove().draw(false);
                                        }

                                        else { alertify.error('Not Deleted'); }
                                    }

                                });

                            } else { }
                        });

                    });
                }
            },

            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                $("td:first", nRow).html(iDisplayIndex + 1);
                return nRow;
            },
            "oLanguage": { "sSearch": "Search Category : " },
            "sDom": 'lftipr',
            "processing": true,
            "deferRender": true,
            "bSelect": true,
            "columns": [
           { "data": "ID", "bVisible": false },
                { "data": "CenterDeptName", "bSortable": false },
                { "data": "CenterDeptName" },
                { "data": "Observation" },
                { "data": "Recomendation" },

           {
               "sClass": "center-align-td",
               "mData": null,
               "bSortable": false,
               "mRender": function (data, type, row) {
                   return '<button class="btn btn-success edit" data-id=' + row.ID + ' data-Observation=' + '"' + row.Observation + '"' + ' data-Recomendation=' + '"' + row.Recomendation + '"'+ '>'+ '<i class=icon-pencil></i>' + '</button>&nbsp;<button class="btn btn-info delete" data-id=' + row.ID + '>' + '<i class=icon-trash></i>' + '</button>';
               }
           }
            ],
            "order": [3, "asc"]

        });

    }
    $(document).ready(function () {

        $("#liSetup,#liRegion").addClass("active");

        var WriteCheck = "0";

        if (WriteCheck == "@HttpContext.Current.Session["WriteCheck"]") {
            // $("#btnNew").css("display", "none");
            $("#btnNew").attr("disabled", true);
        }
        else {
        }

        $("#btnRefresh").click(function () {
            ClearForm();
        });

        GenerateDetailGrid();

    });

</script>

<script type="text/javascript">

    function ClearForm() {
        $('#Observation').val('');
        $('#Recomendation').val('');
        $('#RegionID').val(0);
        $('#DeptID').val(0);
        $('#SubDeptID').val(0);
    }

    function OnSuccess(response) {
        if (response == "1") {
            alertify.success("Recommendation Saved Successfully");
            $('#create').text('Create');
            var dt = $('#datatab').DataTable();
            dt.ajax.reload();
            ClearForm();
        }
        else if (response == "0") {
            alertify.error("Unable To Save Recommendation.");
        }
        else if (response == "2") {
            alertify.error("Recommendation Code Already Exist");
        }
        else {
            alertify.error(response);
        }

    }

    function OnFailure(response) {
        if (response.status == 422) {
            var errors = JSON.parse(response.responseText);
            alertify.error(errors.errors);
        }
        else {
            alertify.error(response);
        }
    }
</script>

