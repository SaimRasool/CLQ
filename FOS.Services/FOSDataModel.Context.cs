//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FOS.DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FOSDataModel : DbContext
    {
        public FOSDataModel()
            : base("name=FOSDataModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LoginHistory> LoginHistories { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RolePage> RolePages { get; set; }
        public virtual DbSet<AccessLog> AccessLogs { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<SubDepartment> SubDepartments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CenterDepartment> CenterDepartments { get; set; }
        public virtual DbSet<QA> QAs { get; set; }
        public virtual DbSet<RatedNumber> RatedNumbers { get; set; }
        public virtual DbSet<ImagesTable> ImagesTables { get; set; }
        public virtual DbSet<TempRatedNumber> TempRatedNumbers { get; set; }
        public virtual DbSet<EmpDepartment> EmpDepartments { get; set; }
        public virtual DbSet<AuditComponent> AuditComponents { get; set; }
        public virtual DbSet<AuditComponentDetail> AuditComponentDetails { get; set; }
        public virtual DbSet<StaffSubType> StaffSubTypes { get; set; }
        public virtual DbSet<StaffType> StaffTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<staff_detail> staff_detail { get; set; }
        public virtual DbSet<Regions> Regions { get; set; }
        public virtual DbSet<Observation> Observation { get; set; }
        public virtual DbSet<Audit> Audit { get; set; }
        public virtual DbSet<Approvel> Approvel { get; set; }
        public virtual DbSet<ComplianceReport> ComplianceReport { get; set; }
        public virtual DbSet<ComplianceRatedNumber> ComplianceRatedNumber { get; set; }
    
        [DbFunction("FOSDataModel", "fnStringList2Table")]
        public virtual IQueryable<fnStringList2Table_Result> fnStringList2Table(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnStringList2Table_Result>("[FOSDataModel].[fnStringList2Table](@List)", listParameter);
        }
    
        public virtual ObjectResult<AreasRelatedtoCities_Result> AreasRelatedtoCities(Nullable<int> salesofficerid)
        {
            var salesofficeridParameter = salesofficerid.HasValue ?
                new ObjectParameter("salesofficerid", salesofficerid) :
                new ObjectParameter("salesofficerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AreasRelatedtoCities_Result>("AreasRelatedtoCities", salesofficeridParameter);
        }
    
        public virtual ObjectResult<CalView_All_Result> CalView_All(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalView_All_Result>("CalView_All", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<CalView_Daily_Result> CalView_Daily(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalView_Daily_Result>("CalView_Daily", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<CalView_Monthly_Result> CalView_Monthly(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalView_Monthly_Result>("CalView_Monthly", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<CalView_Weekly_Result> CalView_Weekly(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CalView_Weekly_Result>("CalView_Weekly", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<CityPaintersByRetailer_Result> CityPaintersByRetailer(Nullable<int> retailerid, string city)
        {
            var retaileridParameter = retailerid.HasValue ?
                new ObjectParameter("retailerid", retailerid) :
                new ObjectParameter("retailerid", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CityPaintersByRetailer_Result>("CityPaintersByRetailer", retaileridParameter, cityParameter);
        }
    
        public virtual ObjectResult<GetSalesOfficerJobAreas_Result> GetSalesOfficerJobAreas(Nullable<int> soId, Nullable<int> jobId, string areas)
        {
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            var jobIdParameter = jobId.HasValue ?
                new ObjectParameter("JobId", jobId) :
                new ObjectParameter("JobId", typeof(int));
    
            var areasParameter = areas != null ?
                new ObjectParameter("Areas", areas) :
                new ObjectParameter("Areas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesOfficerJobAreas_Result>("GetSalesOfficerJobAreas", soIdParameter, jobIdParameter, areasParameter);
        }
    
        public virtual ObjectResult<PaintersBySalesOfficer_Result> PaintersBySalesOfficer(Nullable<int> salesofficerid)
        {
            var salesofficeridParameter = salesofficerid.HasValue ?
                new ObjectParameter("salesofficerid", salesofficerid) :
                new ObjectParameter("salesofficerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaintersBySalesOfficer_Result>("PaintersBySalesOfficer", salesofficeridParameter);
        }
    
        public virtual ObjectResult<PaintersBySalesOfficerEDIT_Result> PaintersBySalesOfficerEDIT(Nullable<int> salesofficerid, Nullable<int> jobid)
        {
            var salesofficeridParameter = salesofficerid.HasValue ?
                new ObjectParameter("salesofficerid", salesofficerid) :
                new ObjectParameter("salesofficerid", typeof(int));
    
            var jobidParameter = jobid.HasValue ?
                new ObjectParameter("jobid", jobid) :
                new ObjectParameter("jobid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PaintersBySalesOfficerEDIT_Result>("PaintersBySalesOfficerEDIT", salesofficeridParameter, jobidParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitDetail_Result> Sp__TotalShopVisitDetail(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitDetail_Result>("Sp__TotalShopVisitDetail", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitSummery_Result> Sp__TotalShopVisitSummery(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitSummery_Result>("Sp__TotalShopVisitSummery", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<sp_MarketInformation_Result> sp_MarketInformation(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MarketInformation_Result>("sp_MarketInformation", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter);
        }
    
        public virtual ObjectResult<Sp_RetailerInformation_Result> Sp_RetailerInformation(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_RetailerInformation_Result>("Sp_RetailerInformation", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_Total_RetailerInformation_Result> Sp_Total_RetailerInformation(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Total_RetailerInformation_Result>("Sp_Total_RetailerInformation", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitSummeryOneLine_Result> Sp__TotalShopVisitSummeryOneLine(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitSummeryOneLine_Result>("Sp__TotalShopVisitSummeryOneLine", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter);
        }
    
        public virtual ObjectResult<Sp__ShopBrandWiseDisplay_Result> Sp__ShopBrandWiseDisplay(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId, Nullable<int> display)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__ShopBrandWiseDisplay_Result>("Sp__ShopBrandWiseDisplay", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter, displayParameter);
        }
    
        public virtual ObjectResult<Sp_Total_RetailerInformation1_Result> Sp_Total_RetailerInformation1(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Total_RetailerInformation1_Result>("Sp_Total_RetailerInformation1", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_Total_RetailerInformationSummary_Result> Sp_Total_RetailerInformationSummary(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Total_RetailerInformationSummary_Result>("Sp_Total_RetailerInformationSummary", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_CityMarketRetailerInfo_Result> Sp_CityMarketRetailerInfo(Nullable<System.DateTime> date, Nullable<int> cityId, Nullable<int> retailerId)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var retailerIdParameter = retailerId.HasValue ?
                new ObjectParameter("RetailerId", retailerId) :
                new ObjectParameter("RetailerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CityMarketRetailerInfo_Result>("Sp_CityMarketRetailerInfo", dateParameter, cityIdParameter, retailerIdParameter);
        }
    
        public virtual ObjectResult<Sp__ShopBrandWiseDisplay1_Result> Sp__ShopBrandWiseDisplay1(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> display, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(int));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__ShopBrandWiseDisplay1_Result>("Sp__ShopBrandWiseDisplay1", startingDateParameter, endingDateParameter, displayParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp__ShopBrandWiseDisplayForReport_Result> Sp__ShopBrandWiseDisplayForReport(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> display, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(int));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__ShopBrandWiseDisplayForReport_Result>("Sp__ShopBrandWiseDisplayForReport", startingDateParameter, endingDateParameter, displayParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp__ShopBrandWiseDisplayData_Result> Sp__ShopBrandWiseDisplayData(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId, Nullable<int> display)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var displayParameter = display.HasValue ?
                new ObjectParameter("Display", display) :
                new ObjectParameter("Display", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__ShopBrandWiseDisplayData_Result>("Sp__ShopBrandWiseDisplayData", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter, displayParameter);
        }
    
        public virtual ObjectResult<Sp_Top10Sales_Result> Sp_Top10Sales(Nullable<System.DateTime> tillDate)
        {
            var tillDateParameter = tillDate.HasValue ?
                new ObjectParameter("tillDate", tillDate) :
                new ObjectParameter("tillDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10Sales_Result>("Sp_Top10Sales", tillDateParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitSummeryForReport_Result> Sp__TotalShopVisitSummeryForReport(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitSummeryForReport_Result>("Sp__TotalShopVisitSummeryForReport", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_FosPlanning_Result> Sp_FosPlanning(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_FosPlanning_Result>("Sp_FosPlanning", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter);
        }
    
        public virtual ObjectResult<Sp_Top10Sales1_Result> Sp_Top10Sales1(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10Sales1_Result>("Sp_Top10Sales1", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Top10SalesCityWise_Result> Sp_Top10SalesCityWise(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10SalesCityWise_Result>("Sp_Top10SalesCityWise", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Top10SalesCityWiseGraph_Result> Sp_Top10SalesCityWiseGraph(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10SalesCityWiseGraph_Result>("Sp_Top10SalesCityWiseGraph", dateParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitSummeryReport_Result> Sp__TotalShopVisitSummeryReport(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitSummeryReport_Result>("Sp__TotalShopVisitSummeryReport", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_CustomerInformation_Result> Sp_CustomerInformation(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CustomerInformation_Result>("Sp_CustomerInformation", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_CustomerInformationSummery_Result> Sp_CustomerInformationSummery(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CustomerInformationSummery_Result>("Sp_CustomerInformationSummery", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_CustomerInformationSummeryFinal_Result> Sp_CustomerInformationSummeryFinal(Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> cityId)
        {
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CustomerInformationSummeryFinal_Result>("Sp_CustomerInformationSummeryFinal", headIdParameter, saleOfficerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetItemsRelatedToJobID_Result> Sp_GetItemsRelatedToJobID(Nullable<int> jobID)
        {
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetItemsRelatedToJobID_Result>("Sp_GetItemsRelatedToJobID", jobIDParameter);
        }
    
        public virtual ObjectResult<Sp_Top10VisitsCityWiseGraph_Result> Sp_Top10VisitsCityWiseGraph(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10VisitsCityWiseGraph_Result>("Sp_Top10VisitsCityWiseGraph", dateParameter);
        }
    
        public virtual ObjectResult<Sp_Top10CustomerVisitSOWise_Result> Sp_Top10CustomerVisitSOWise(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10CustomerVisitSOWise_Result>("Sp_Top10CustomerVisitSOWise", dateParameter);
        }
    
        public virtual ObjectResult<Sp_MyVisits_Result> Sp_MyVisits(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyVisits_Result>("Sp_MyVisits", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_MyVisitsMapView_Result> Sp_MyVisitsMapView(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyVisitsMapView_Result>("Sp_MyVisitsMapView", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoRegion_Result> Sp_GetCustomersRelatedtoRegion(Nullable<int> regionID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoRegion_Result>("Sp_GetCustomersRelatedtoRegion", regionIDParameter);
        }
    
        public virtual ObjectResult<Sp_PresentSO_Result> Sp_PresentSO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSO_Result>("Sp_PresentSO");
        }
    
        public virtual ObjectResult<Sp_SOVisitsToday_Result> Sp_SOVisitsToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitsToday_Result>("Sp_SOVisitsToday");
        }
    
        public virtual ObjectResult<Sp_ActiveReminders_Result> Sp_ActiveReminders(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ActiveReminders_Result>("Sp_ActiveReminders", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_PendingReminders_Result> Sp_PendingReminders(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PendingReminders_Result>("Sp_PendingReminders", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_ActiveRemindersFinal_Result> Sp_ActiveRemindersFinal(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ActiveRemindersFinal_Result>("Sp_ActiveRemindersFinal", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_PendingRemindersFinal_Result> Sp_PendingRemindersFinal(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PendingRemindersFinal_Result>("Sp_PendingRemindersFinal", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoRegionFinal_Result> Sp_GetCustomersRelatedtoRegionFinal(Nullable<int> regionID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoRegionFinal_Result>("Sp_GetCustomersRelatedtoRegionFinal", regionIDParameter);
        }
    
        public virtual ObjectResult<Sp_PresentSO1_Result> Sp_PresentSO1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSO1_Result>("Sp_PresentSO1");
        }
    
        public virtual ObjectResult<Sp_PresentSOFinal_Result> Sp_PresentSOFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOFinal_Result>("Sp_PresentSOFinal");
        }
    
        public virtual ObjectResult<Sp_SOVisitsTodayFinal_Result> Sp_SOVisitsTodayFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitsTodayFinal_Result>("Sp_SOVisitsTodayFinal");
        }
    
        public virtual ObjectResult<Sp_PresentSOPieGraph_Result> Sp_PresentSOPieGraph()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOPieGraph_Result>("Sp_PresentSOPieGraph");
        }
    
        public virtual ObjectResult<Sp_NewSchoolVisitForFAwaz_Result> Sp_NewSchoolVisitForFAwaz()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_NewSchoolVisitForFAwaz_Result>("Sp_NewSchoolVisitForFAwaz");
        }
    
        public virtual ObjectResult<Sp_NewSchoolsTodayForNSM_Result> Sp_NewSchoolsTodayForNSM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_NewSchoolsTodayForNSM_Result>("Sp_NewSchoolsTodayForNSM");
        }
    
        public virtual ObjectResult<Sp_VisitsThisMonthForNSM_Result> Sp_VisitsThisMonthForNSM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VisitsThisMonthForNSM_Result>("Sp_VisitsThisMonthForNSM");
        }
    
        public virtual ObjectResult<Sp_VisitsLastMonthForNSM_Result> Sp_VisitsLastMonthForNSM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_VisitsLastMonthForNSM_Result>("Sp_VisitsLastMonthForNSM");
        }
    
        public virtual ObjectResult<Sp_PresentSOBarGraph_Result> Sp_PresentSOBarGraph()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOBarGraph_Result>("Sp_PresentSOBarGraph");
        }
    
        public virtual ObjectResult<Sp_PresentSOPieGraphFinal_Result> Sp_PresentSOPieGraphFinal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOPieGraphFinal_Result>("Sp_PresentSOPieGraphFinal");
        }
    
        public virtual ObjectResult<Sp_ActiveRemindersFinalQuery_Result> Sp_ActiveRemindersFinalQuery(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_ActiveRemindersFinalQuery_Result>("Sp_ActiveRemindersFinalQuery", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_PendingRemindersFinalQuery_Result> Sp_PendingRemindersFinalQuery(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PendingRemindersFinalQuery_Result>("Sp_PendingRemindersFinalQuery", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSchoolsForEdit_Result> Sp_GetSchoolsForEdit(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSchoolsForEdit_Result>("Sp_GetSchoolsForEdit", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_DailySummaryReport_Result> Sp_DailySummaryReport(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DailySummaryReport_Result>("Sp_DailySummaryReport", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Sp_DailySummaryReport1_0_Result> Sp_DailySummaryReport1_0(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DailySummaryReport1_0_Result>("Sp_DailySummaryReport1_0", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoRegionFinal1_0_Result> Sp_GetCustomersRelatedtoRegionFinal1_0(Nullable<int> regionID, Nullable<int> cityID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoRegionFinal1_0_Result>("Sp_GetCustomersRelatedtoRegionFinal1_0", regionIDParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSchoolsForEdit1_0_Result> Sp_GetSchoolsForEdit1_0(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSchoolsForEdit1_0_Result>("Sp_GetSchoolsForEdit1_0", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoArea_Result> Sp_GetCustomersRelatedtoArea(Nullable<int> regionID, Nullable<int> cityID, Nullable<int> areaID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("AreaID", areaID) :
                new ObjectParameter("AreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoArea_Result>("Sp_GetCustomersRelatedtoArea", regionIDParameter, cityIDParameter, areaIDParameter);
        }
    
        public virtual ObjectResult<sp_GetExpenses_Result> sp_GetExpenses(Nullable<int> soID, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var soIDParameter = soID.HasValue ?
                new ObjectParameter("SoID", soID) :
                new ObjectParameter("SoID", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetExpenses_Result>("sp_GetExpenses", soIDParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoArea1_Result> Sp_GetCustomersRelatedtoArea1(Nullable<int> regionID, Nullable<int> cityID, Nullable<int> areaID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("AreaID", areaID) :
                new ObjectParameter("AreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoArea1_Result>("Sp_GetCustomersRelatedtoArea1", regionIDParameter, cityIDParameter, areaIDParameter);
        }
    
        public virtual int Sp_GetCustomersRelatedtoArea2(Nullable<int> regionID, Nullable<int> cityID, Nullable<int> areaID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("AreaID", areaID) :
                new ObjectParameter("AreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_GetCustomersRelatedtoArea2", regionIDParameter, cityIDParameter, areaIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomersRelatedtoAreas_Result> Sp_GetCustomersRelatedtoAreas(Nullable<int> regionID, Nullable<int> cityID, Nullable<int> areaID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            var areaIDParameter = areaID.HasValue ?
                new ObjectParameter("AreaID", areaID) :
                new ObjectParameter("AreaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomersRelatedtoAreas_Result>("Sp_GetCustomersRelatedtoAreas", regionIDParameter, cityIDParameter, areaIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSchoolForEdit_Result> Sp_GetSchoolForEdit(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSchoolForEdit_Result>("Sp_GetSchoolForEdit", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetSchoolForEdit2_Result> Sp_GetSchoolForEdit2(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSchoolForEdit2_Result>("Sp_GetSchoolForEdit2", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomerRelatedtoRegionFinal_Result> Sp_GetCustomerRelatedtoRegionFinal(Nullable<int> regionID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomerRelatedtoRegionFinal_Result>("Sp_GetCustomerRelatedtoRegionFinal", regionIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomerRelatedtoRegionFinal1_1_Result> Sp_GetCustomerRelatedtoRegionFinal1_1(Nullable<int> regionID, Nullable<int> cityID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomerRelatedtoRegionFinal1_1_Result>("Sp_GetCustomerRelatedtoRegionFinal1_1", regionIDParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Sp_GetSylabusIDReliatedToRetialerID(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sp_GetSylabusIDReliatedToRetialerID", iDParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitSummaryDateWise1_1_Result> Sp_SOVisitSummaryDateWise1_1(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitSummaryDateWise1_1_Result>("Sp_SOVisitSummaryDateWise1_1", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetDistrictsProvinceWise_Result> Sp_GetDistrictsProvinceWise(Nullable<int> provinceID)
        {
            var provinceIDParameter = provinceID.HasValue ?
                new ObjectParameter("ProvinceID", provinceID) :
                new ObjectParameter("ProvinceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetDistrictsProvinceWise_Result>("Sp_GetDistrictsProvinceWise", provinceIDParameter);
        }
    
        public virtual ObjectResult<Sp_GetRetailerSessionMonth1_3_Result> Sp_GetRetailerSessionMonth1_3(Nullable<int> soID, string sessionMonth)
        {
            var soIDParameter = soID.HasValue ?
                new ObjectParameter("SoID", soID) :
                new ObjectParameter("SoID", typeof(int));
    
            var sessionMonthParameter = sessionMonth != null ?
                new ObjectParameter("SessionMonth", sessionMonth) :
                new ObjectParameter("SessionMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetRetailerSessionMonth1_3_Result>("Sp_GetRetailerSessionMonth1_3", soIDParameter, sessionMonthParameter);
        }
    
        public virtual ObjectResult<Sp_GetSmsDateWise_Result> Sp_GetSmsDateWise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSmsDateWise_Result>("Sp_GetSmsDateWise");
        }
    
        public virtual ObjectResult<Sp_GetSmsSchoolWise_Result> Sp_GetSmsSchoolWise(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("startingDate", startingDate) :
                new ObjectParameter("startingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("endingDate", endingDate) :
                new ObjectParameter("endingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSmsSchoolWise_Result>("Sp_GetSmsSchoolWise", startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Sp_GetSmsMarketerWise_Result> Sp_GetSmsMarketerWise(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("startingDate", startingDate) :
                new ObjectParameter("startingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("endingDate", endingDate) :
                new ObjectParameter("endingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetSmsMarketerWise_Result>("Sp_GetSmsMarketerWise", startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> Sp_MyVisit(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("Sp_MyVisit", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitSummaryDateWise1_2_Result> Sp_SOVisitSummaryDateWise1_2(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitSummaryDateWise1_2_Result>("Sp_SOVisitSummaryDateWise1_2", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<Sp_MyVisit1_1_Result> Sp_MyVisit1_1(Nullable<int> saleofficerID)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyVisit1_1_Result>("Sp_MyVisit1_1", saleofficerIDParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitSummaryDateWise1_4_Result> Sp_SOVisitSummaryDateWise1_4(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitSummaryDateWise1_4_Result>("Sp_SOVisitSummaryDateWise1_4", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<Sp_GetCustomerRelatedtoRegionFinal1_2_Result> Sp_GetCustomerRelatedtoRegionFinal1_2(Nullable<int> regionID, Nullable<int> cityID)
        {
            var regionIDParameter = regionID.HasValue ?
                new ObjectParameter("RegionID", regionID) :
                new ObjectParameter("RegionID", typeof(int));
    
            var cityIDParameter = cityID.HasValue ?
                new ObjectParameter("CityID", cityID) :
                new ObjectParameter("CityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_GetCustomerRelatedtoRegionFinal1_2_Result>("Sp_GetCustomerRelatedtoRegionFinal1_2", regionIDParameter, cityIDParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitsToday1_1_Result> Sp_SOVisitsToday1_1(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitsToday1_1_Result>("Sp_SOVisitsToday1_1", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_PresentSOBarGraph1_1_Result> Sp_PresentSOBarGraph1_1(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOBarGraph1_1_Result>("Sp_PresentSOBarGraph1_1", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_MyVisit1_2_Result> Sp_MyVisit1_2(Nullable<int> saleofficerID, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyVisit1_2_Result>("Sp_MyVisit1_2", saleofficerIDParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_MyVisitsMapView1_1_Result> Sp_MyVisitsMapView1_1(Nullable<int> saleofficerID, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var saleofficerIDParameter = saleofficerID.HasValue ?
                new ObjectParameter("saleofficerID", saleofficerID) :
                new ObjectParameter("saleofficerID", typeof(int));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MyVisitsMapView1_1_Result>("Sp_MyVisitsMapView1_1", saleofficerIDParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp__TotalShopVisitSummery1_1_Result> Sp__TotalShopVisitSummery1_1(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate, Nullable<int> headId, Nullable<int> saleOfficerId, Nullable<int> dealerId, Nullable<int> cityId)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            var headIdParameter = headId.HasValue ?
                new ObjectParameter("HeadId", headId) :
                new ObjectParameter("HeadId", typeof(int));
    
            var saleOfficerIdParameter = saleOfficerId.HasValue ?
                new ObjectParameter("SaleOfficerId", saleOfficerId) :
                new ObjectParameter("SaleOfficerId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("dealerId", dealerId) :
                new ObjectParameter("dealerId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp__TotalShopVisitSummery1_1_Result>("Sp__TotalShopVisitSummery1_1", startingDateParameter, endingDateParameter, headIdParameter, saleOfficerIdParameter, dealerIdParameter, cityIdParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitSummaryDateWise1_3_Result> Sp_SOVisitSummaryDateWise1_3(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> soId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var soIdParameter = soId.HasValue ?
                new ObjectParameter("SoId", soId) :
                new ObjectParameter("SoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitSummaryDateWise1_3_Result>("Sp_SOVisitSummaryDateWise1_3", startDateParameter, endDateParameter, soIdParameter);
        }
    
        public virtual ObjectResult<Sp_PresentSOBarGraph1_2_Result> Sp_PresentSOBarGraph1_2(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOBarGraph1_2_Result>("Sp_PresentSOBarGraph1_2", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_DailySummaryReport1_01_Result> Sp_DailySummaryReport1_01(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DailySummaryReport1_01_Result>("Sp_DailySummaryReport1_01", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Sp_DailySummaryReport1_1_Result> Sp_DailySummaryReport1_1(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DailySummaryReport1_1_Result>("Sp_DailySummaryReport1_1", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<Sp_DailySummaryReport1_2_Result> Sp_DailySummaryReport1_2(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DailySummaryReport1_2_Result>("Sp_DailySummaryReport1_2", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<sp_SchoolWiseVisitsData1_7_Result> sp_SchoolWiseVisitsData1_7(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> soID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var soIDParameter = soID.HasValue ?
                new ObjectParameter("SoID", soID) :
                new ObjectParameter("SoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SchoolWiseVisitsData1_7_Result>("sp_SchoolWiseVisitsData1_7", dateFromParameter, dateToParameter, soIDParameter);
        }
    
        public virtual ObjectResult<Sp_SchoolVisitsSampleMarketerSummary1_4_Result> Sp_SchoolVisitsSampleMarketerSummary1_4(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SchoolVisitsSampleMarketerSummary1_4_Result>("Sp_SchoolVisitsSampleMarketerSummary1_4", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetAbsentSO_Result> SP_GetAbsentSO(Nullable<int> sOID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var sOIDParameter = sOID.HasValue ?
                new ObjectParameter("SOID", sOID) :
                new ObjectParameter("SOID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAbsentSO_Result>("SP_GetAbsentSO", sOIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<SP_GetOnLeaveSO_Result> SP_GetOnLeaveSO(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetOnLeaveSO_Result>("SP_GetOnLeaveSO", startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<SP_GetSOAttendance_Result> SP_GetSOAttendance(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSOAttendance_Result>("SP_GetSOAttendance", startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<SP_GetSOAttendance1_1_Result> SP_GetSOAttendance1_1(Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetSOAttendance1_1_Result>("SP_GetSOAttendance1_1", startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<GetSubDepartmentForGrid_Result> GetSubDepartmentForGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubDepartmentForGrid_Result>("GetSubDepartmentForGrid");
        }
    
        public virtual ObjectResult<GetSubDepartmentForGrid1_1_Result> GetSubDepartmentForGrid1_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubDepartmentForGrid1_1_Result>("GetSubDepartmentForGrid1_1");
        }
    
        public virtual ObjectResult<GetAllEmployee_Result> GetAllEmployee(Nullable<int> deptID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployee_Result>("GetAllEmployee", deptIDParameter);
        }
    
        public virtual ObjectResult<GetDaysDoctorWise_Result> GetDaysDoctorWise(Nullable<int> doctorID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDaysDoctorWise_Result>("GetDaysDoctorWise", doctorIDParameter);
        }
    
        public virtual ObjectResult<GetDoctorForGrid_Result> GetDoctorForGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorForGrid_Result>("GetDoctorForGrid");
        }
    
        public virtual ObjectResult<GetDoctorForGrid1_1_Result> GetDoctorForGrid1_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorForGrid1_1_Result>("GetDoctorForGrid1_1");
        }
    
        public virtual ObjectResult<GetDoctorForGrid1_2_Result> GetDoctorForGrid1_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorForGrid1_2_Result>("GetDoctorForGrid1_2");
        }
    
        public virtual ObjectResult<GetDoctorForGrid1_Result> GetDoctorForGrid1(string name, Nullable<int> deptID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorForGrid1_Result>("GetDoctorForGrid1", nameParameter, deptIDParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid_Result> GetDrForGrid(string name, Nullable<int> deptID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid_Result>("GetDrForGrid", nameParameter, deptIDParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid1_1_Result> GetDrForGrid1_1(string name, Nullable<int> deptID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid1_1_Result>("GetDrForGrid1_1", nameParameter, deptIDParameter);
        }
    
        public virtual ObjectResult<GetDoctorTable_Result> GetDoctorTable(Nullable<int> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorTable_Result>("GetDoctorTable", docIDParameter);
        }
    
        public virtual ObjectResult<GetDoctorTable1_1_Result> GetDoctorTable1_1(Nullable<int> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorTable1_1_Result>("GetDoctorTable1_1", docIDParameter);
        }
    
        public virtual ObjectResult<GetAllSlotDoctorWise_Result> GetAllSlotDoctorWise(Nullable<int> doctorID, Nullable<int> dayID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var dayIDParameter = dayID.HasValue ?
                new ObjectParameter("DayID", dayID) :
                new ObjectParameter("DayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSlotDoctorWise_Result>("GetAllSlotDoctorWise", doctorIDParameter, dayIDParameter);
        }
    
        public virtual ObjectResult<AppointmentRequest_Result> AppointmentRequest()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentRequest_Result>("AppointmentRequest");
        }
    
        public virtual ObjectResult<GetSubDepartmentForGrid1_Result> GetSubDepartmentForGrid1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubDepartmentForGrid1_Result>("GetSubDepartmentForGrid1");
        }
    
        public virtual ObjectResult<GetSubDepartment_Result> GetSubDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubDepartment_Result>("GetSubDepartment");
        }
    
        public virtual ObjectResult<string> GetAllEmployee1_1(Nullable<int> deptID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAllEmployee1_1", deptIDParameter);
        }
    
        public virtual ObjectResult<GetAllEmployee1_2_Result> GetAllEmployee1_2(Nullable<int> deptID)
        {
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllEmployee1_2_Result>("GetAllEmployee1_2", deptIDParameter);
        }
    
        public virtual ObjectResult<GetDaysDoctorWise1_1_Result> GetDaysDoctorWise1_1(Nullable<int> doctorID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDaysDoctorWise1_1_Result>("GetDaysDoctorWise1_1", doctorIDParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid1_2_Result> GetDrForGrid1_2(string drName, Nullable<int> department)
        {
            var drNameParameter = drName != null ?
                new ObjectParameter("DrName", drName) :
                new ObjectParameter("DrName", typeof(string));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid1_2_Result>("GetDrForGrid1_2", drNameParameter, departmentParameter);
        }
    
        public virtual ObjectResult<GetAllSlotDoctorWise1_1_Result> GetAllSlotDoctorWise1_1(Nullable<int> doctorID, Nullable<int> dayID, Nullable<System.DateTime> date)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var dayIDParameter = dayID.HasValue ?
                new ObjectParameter("DayID", dayID) :
                new ObjectParameter("DayID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSlotDoctorWise1_1_Result>("GetAllSlotDoctorWise1_1", doctorIDParameter, dayIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetDoctorTable1_2_Result> GetDoctorTable1_2(Nullable<int> docID)
        {
            var docIDParameter = docID.HasValue ?
                new ObjectParameter("DocID", docID) :
                new ObjectParameter("DocID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDoctorTable1_2_Result>("GetDoctorTable1_2", docIDParameter);
        }
    
        public virtual ObjectResult<GetAllSlotDoctorWise1_2_Result> GetAllSlotDoctorWise1_2(Nullable<int> doctorID, Nullable<int> dayID, Nullable<System.DateTime> date)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var dayIDParameter = dayID.HasValue ?
                new ObjectParameter("DayID", dayID) :
                new ObjectParameter("DayID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSlotDoctorWise1_2_Result>("GetAllSlotDoctorWise1_2", doctorIDParameter, dayIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<AppointmentRequest1_1_Result> AppointmentRequest1_1(Nullable<int> doctorID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentRequest1_1_Result>("AppointmentRequest1_1", doctorIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<GetPatientForReport_Result> GetPatientForReport(Nullable<int> patientID)
        {
            var patientIDParameter = patientID.HasValue ?
                new ObjectParameter("PatientID", patientID) :
                new ObjectParameter("PatientID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientForReport_Result>("GetPatientForReport", patientIDParameter);
        }
    
        public virtual ObjectResult<Sp_Top10CustomerVisitSOWise1_Result> Sp_Top10CustomerVisitSOWise1(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10CustomerVisitSOWise1_Result>("Sp_Top10CustomerVisitSOWise1", dateParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitsToday1_11_Result> Sp_SOVisitsToday1_11(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitsToday1_11_Result>("Sp_SOVisitsToday1_11", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<Sp_SOVisitsTodayFinal1_Result> Sp_SOVisitsTodayFinal1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_SOVisitsTodayFinal1_Result>("Sp_SOVisitsTodayFinal1");
        }
    
        public virtual ObjectResult<Sp_PresentSOBarGraph1_21_Result> Sp_PresentSOBarGraph1_21(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PresentSOBarGraph1_21_Result>("Sp_PresentSOBarGraph1_21", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid1_3_Result> GetDrForGrid1_3(Nullable<int> doctorID, Nullable<int> department)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid1_3_Result>("GetDrForGrid1_3", doctorIDParameter, departmentParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid1_4_Result> GetDrForGrid1_4(Nullable<int> doctorID, Nullable<int> department)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid1_4_Result>("GetDrForGrid1_4", doctorIDParameter, departmentParameter);
        }
    
        public virtual ObjectResult<GetPatientDocrorWise_Result> GetPatientDocrorWise(Nullable<int> doctorID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientDocrorWise_Result>("GetPatientDocrorWise", doctorIDParameter);
        }
    
        public virtual ObjectResult<GetPatientDocrorWise1_1_Result> GetPatientDocrorWise1_1(Nullable<int> doctorID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientDocrorWise1_1_Result>("GetPatientDocrorWise1_1", doctorIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<string> GetDoctorName(Nullable<int> empID)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDoctorName", empIDParameter);
        }
    
        public virtual ObjectResult<GetAllSlotDoctorWise1_3_Result> GetAllSlotDoctorWise1_3(Nullable<int> doctorID, Nullable<int> dayID, Nullable<System.DateTime> date)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var dayIDParameter = dayID.HasValue ?
                new ObjectParameter("DayID", dayID) :
                new ObjectParameter("DayID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSlotDoctorWise1_3_Result>("GetAllSlotDoctorWise1_3", doctorIDParameter, dayIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<AppointmentRequest1_2_Result> AppointmentRequest1_2(Nullable<int> doctorID, Nullable<System.DateTime> startingDate, Nullable<System.DateTime> endingDate)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var endingDateParameter = endingDate.HasValue ?
                new ObjectParameter("EndingDate", endingDate) :
                new ObjectParameter("EndingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentRequest1_2_Result>("AppointmentRequest1_2", doctorIDParameter, startingDateParameter, endingDateParameter);
        }
    
        public virtual ObjectResult<AvailableDoctorSlotRequest_Result> AvailableDoctorSlotRequest(Nullable<int> doctorID, Nullable<System.DateTime> startingDate, Nullable<int> dayID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var startingDateParameter = startingDate.HasValue ?
                new ObjectParameter("StartingDate", startingDate) :
                new ObjectParameter("StartingDate", typeof(System.DateTime));
    
            var dayIDParameter = dayID.HasValue ?
                new ObjectParameter("DayID", dayID) :
                new ObjectParameter("DayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AvailableDoctorSlotRequest_Result>("AvailableDoctorSlotRequest", doctorIDParameter, startingDateParameter, dayIDParameter);
        }
    
        public virtual ObjectResult<GetDrForGrid1_5_Result> GetDrForGrid1_5(Nullable<int> doctorID, Nullable<int> department)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var departmentParameter = department.HasValue ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDrForGrid1_5_Result>("GetDrForGrid1_5", doctorIDParameter, departmentParameter);
        }
    
        public virtual ObjectResult<TotalAppointmentDeparmentWiseToday_Result> TotalAppointmentDeparmentWiseToday()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TotalAppointmentDeparmentWiseToday_Result>("TotalAppointmentDeparmentWiseToday");
        }
    
        public virtual ObjectResult<Sp_Top10VisitsCityWiseGraph1_1_Result> Sp_Top10VisitsCityWiseGraph1_1(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Top10VisitsCityWiseGraph1_1_Result>("Sp_Top10VisitsCityWiseGraph1_1", dateParameter);
        }
    
        public virtual ObjectResult<GetPatientDocrorWise1_2_Result> GetPatientDocrorWise1_2(Nullable<int> doctorID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("DoctorID", doctorID) :
                new ObjectParameter("DoctorID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPatientDocrorWise1_2_Result>("GetPatientDocrorWise1_2", doctorIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<CenterDepartmentList1_1_Result> CenterDepartmentList1_1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CenterDepartmentList1_1_Result>("CenterDepartmentList1_1");
        }
    
        public virtual ObjectResult<GetQuestionList_Result> GetQuestionList(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionList_Result>("GetQuestionList", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetQuestionList1_1_Result> GetQuestionList1_1(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionList1_1_Result>("GetQuestionList1_1", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetQuestionListForUpdate_Result> GetQuestionListForUpdate(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionListForUpdate_Result>("GetQuestionListForUpdate", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetCLRList_Result> GetCLRList(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCLRList_Result>("GetCLRList", categoryIDParameter, centerIDParameter, deptIDParameter);
        }
    
        public virtual ObjectResult<GetCLRList1_1_Result> GetCLRList1_1(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCLRList1_1_Result>("GetCLRList1_1", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetDepartmentCategoryWise_Result> GetDepartmentCategoryWise(Nullable<int> categoryID, Nullable<int> empID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDepartmentCategoryWise_Result>("GetDepartmentCategoryWise", categoryIDParameter, empIDParameter);
        }
    
        public virtual ObjectResult<GetQuestionListForUpdate1_1_Result> GetQuestionListForUpdate1_1(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionListForUpdate1_1_Result>("GetQuestionListForUpdate1_1", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetQuestionListForEdit_Result> GetQuestionListForEdit(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionListForEdit_Result>("GetQuestionListForEdit", categoryIDParameter, centerIDParameter, deptIDParameter);
        }
    
        public virtual ObjectResult<GetQuestionListForEdit1_1_Result> GetQuestionListForEdit1_1(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionListForEdit1_1_Result>("GetQuestionListForEdit1_1", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<CenterDepartmentList_Result> CenterDepartmentList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CenterDepartmentList_Result>("CenterDepartmentList");
        }
    
        public virtual ObjectResult<GetSummaryCLRList_Result> GetSummaryCLRList(Nullable<int> categoryID, Nullable<int> centerID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSummaryCLRList_Result>("GetSummaryCLRList", categoryIDParameter, centerIDParameter);
        }
    
        public virtual ObjectResult<GetSummaryCLRList1_1_Result> GetSummaryCLRList1_1(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSummaryCLRList1_1_Result>("GetSummaryCLRList1_1", categoryIDParameter, centerIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<GetSummaryCLRList1_2_Result> GetSummaryCLRList1_2(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSummaryCLRList1_2_Result>("GetSummaryCLRList1_2", categoryIDParameter, centerIDParameter, audit_idParameter);
        }
    
        public virtual int GetQuestionListForEdit1_11(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> deptID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var deptIDParameter = deptID.HasValue ?
                new ObjectParameter("DeptID", deptID) :
                new ObjectParameter("DeptID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQuestionListForEdit1_11", categoryIDParameter, centerIDParameter, deptIDParameter, audit_idParameter);
        }
    
        public virtual ObjectResult<usp_get_observation1_Result> usp_get_observation1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_observation1_Result>("usp_get_observation1");
        }
    
        public virtual ObjectResult<usp_get_StaffDetail_Result> usp_get_StaffDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_StaffDetail_Result>("usp_get_StaffDetail");
        }
    
        public virtual ObjectResult<GetComplianceSummary_Result> GetComplianceSummary(Nullable<int> categoryID, Nullable<int> centerID, Nullable<int> audit_id)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var audit_idParameter = audit_id.HasValue ?
                new ObjectParameter("audit_id", audit_id) :
                new ObjectParameter("audit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetComplianceSummary_Result>("GetComplianceSummary", categoryIDParameter, centerIDParameter, audit_idParameter);
        }
    }
}
